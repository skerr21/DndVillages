import 'dart:math';
import 'package:dnd_villages/models/person.dart';

class PersonService {
  static const occupations = [
    'Blacksmith',
    'Baker',
    'Carpenter',
    'Alchemist',
    'Shopkeeper',
    'Farmer',
    'Wizard',
    'Sorcerer',
    'Enchanter',
    'Druid',
    'Knight',
    'Ranger',
    'Assassin',
    'Bard',
    'Necromancer',
    'Monk',
    'Paladin',
    'Thief',
    'Warlock',
    'Scribe',
    'Jeweler',
    'Herbalist',
    'Hunter',
    'Minstrel',
    'Innkeeper',
    'Oracle',
    'Architect',
    'Potion Master',
    'Beastmaster',
    'Shadow Dancer',
    'Seer',
    // Add as many occupations as you want
  ];

  static const namePrefixes = [
    'Ael', 'Aer', 'Af', 'Ah', 'Al', 'Am', 'Ama', 'An', 'Ana', 'Ang',
    'Ank', 'Ar', 'Ari', 'Aur', 'Ba', 'Bel', 'Ber', 'Bok', 'Bor', 'Bram',
    'Brin', 'Ca', 'Cal', 'Cas', 'Cra', 'Da', 'Dal', 'Dan', 'Del', 'Dra',
    'Be',
    'Bri',
    'Cael',
    'Cen',
    'Cor',
    'Cy',
    'Dae',
    'Dri',
    'Eil',
    'El',
    'En',
    'Ero',
    'Fel',
    'Fi',
    'Gal',
    'Glo',
    'Ha',
    'Hel',
    'Ili',
    'In',
    'Isa',
    'Jas',
    'Kai',
    'Ke',
    'Kor',
    'La',
    'Lis',
    'Mar',
    'Mer',
    'Nim',
    'Ori',
    'Pa',
    'Py',
    'Rav',
    'Sa',
    'Sel',
    'Si',
    'Tal',
    'Ula',
    'Va',
    'Ver',
    'Wen',
    'Xan',
    'Yar',
    'Zan',
    // Add as many prefixes as you want
  ];

  static const nameSuffixes = [
    'ador', 'ara', 'bain', 'ban', 'dil', 'dir', 'far', 'fir', 'gor', 'han',
    'har', 'hel', 'hir', 'hor', 'kan', 'kel', 'kin', 'lan', 'lar', 'len',
    'mon', 'mor', 'nal', 'nan', 'nor', 'rin', 'ron', 'tan', 'ten', 'ther',
    'tin', 'tor', 'tum', 'tur', 'vain', 'var', 'vin', 'vorn', 'yorn', 'zor',
    'ar',
    'ath',
    'bane',
    'dar',
    'dor',
    'drin',
    'el',
    'eon',
    'gale',
    'gar',
    'hain',
    'ius',
    'jin',
    'kis',
    'leth',
    'low',
    'mire',
    'mus',
    'nix',
    'phus',
    'quil',
    'rith',
    'ros',
    'shan',
    'sil',
    'thorn',
    'trix',
    'val',
    'vor',
    'wyn',
    'xis',
    'yas',
    'zen',
    // Add as many suffixes as you want
  ];

  final Random _random = Random();

  Person generatePerson(String climate) {
    int age = _random.nextInt(100);
    String occupation;
  
    if (age >= 18) {
      occupation =
          _generateOccupation(climate); // Pass the climate parameter here
    } else {
      occupation = "Child";
    }

    String name = namePrefixes[_random.nextInt(namePrefixes.length)] +
        nameSuffixes[_random.nextInt(nameSuffixes.length)];

    return Person(
      name: name,
      occupation: occupation,
      age: age,
      climate: climate,
    );
  }

  String _generateOccupation(String climate) {
    Map<String, List<String>> validOccupationsByClimate = {
      'Temperate': [
        'Blacksmith',
        'Baker',
        'Carpenter',
        'Alchemist',
        'Shopkeeper',
        'Farmer',
        'Wizard',
        'Sorcerer',
        'Enchanter',
        'Druid',
        'Knight',
        'Ranger',
        'Assassin',
        'Bard',
        'Necromancer',
        'Monk',
        'Paladin',
        'Thief',
        'Warlock',
        'Scribe',
        'Jeweler',
        'Herbalist',
        'Hunter',
        'Minstrel',
        'Innkeeper',
        'Oracle',
        'Architect',
        'Potion Master',
        'Beastmaster',
        'Shadow Dancer',
        'Seer',
      ],
      'Tropical': [
        'Blacksmith',
        'Baker',
        'Carpenter',
        'Alchemist',
        'Shopkeeper',
        'Farmer',
        'Wizard',
        'Sorcerer',
        'Enchanter',
        'Druid',
        'Knight',
        'Ranger',
        'Assassin',
        'Bard',
        'Necromancer',
        'Monk',
        'Paladin',
        'Thief',
        'Warlock',
        'Scribe',
        'Jeweler',
        'Herbalist',
        'Hunter',
        'Minstrel',
        'Innkeeper',
        'Oracle',
        'Architect',
        'Potion Master',
        'Beastmaster',
        'Shadow Dancer',
      ],
      'Desert': [
        'Blacksmith',
        'Baker',
        'Carpenter',
        'Alchemist',
        'Shopkeeper',
        'Farmer',
        'Wizard',
        'Sorcerer',
        'Enchanter',
        'Druid',
        'Knight',
        'Ranger',
        'Assassin',
        'Bard',
        'Necromancer',
        'Monk',
        'Paladin',
        'Thief',
        'Warlock',
        'Scribe',
        'Jeweler',
        'Herbalist',
        'Hunter',
        'Minstrel',
        'Innkeeper',
        'Oracle',
        'Architect',
        'Potion Master',
      ],
      'Arctic': [
        'Blacksmith',
        'Baker',
        'Carpenter',
        'Alchemist',
        'Shopkeeper',
        'Farmer',
        'Wizard',
        'Sorcerer',
        'Enchanter',
        'Druid',
        'Knight',
        'Ranger',
        'Assassin',
        'Bard',
        'Necromancer',
        'Monk',
        'Paladin',
        'Thief',
        'Warlock',
        'Scribe',
        'Jeweler',
        'Herbalist',
      ],
      'Coastal': [
        'Blacksmith',
        'Baker',
        'Carpenter',
        'Alchemist',
        'Shopkeeper',
        'Farmer',
        'Wizard',
        'Sorcerer',
        'Enchanter',
        'Druid',
        'Knight',
        'Ranger',
        'Assassin',
        'Bard',
        'Necromancer',
        'Monk',
        'Paladin',
        'Thief',
        'Warlock',
        'Scribe',
        'Jeweler',
        'Herbalist',
        'Hunter',
        'Minstrel',
      ],
      'Forest': [
        'Blacksmith',
        'Baker',
        'Carpenter',
        'Alchemist',
        'Shopkeeper',
        'Farmer',
        'Wizard',
        'Sorcerer',
        'Enchanter',
        'Druid',
        'Knight',
        'Ranger',
        'Assassin',
        'Bard',
        'Necromancer',
        'Monk',
        'Paladin',
        'Thief',
        'Warlock',
        'Scribe',
        'Jeweler',
        'Herbalist',
      ],
      'Mountain': [
        'Blacksmith',
        'Baker',
        'Carpenter',
        'Alchemist',
        'Shopkeeper',
        'Farmer',
        'Wizard',
        'Sorcerer',
        'Enchanter',
        'Druid',
        'Knight',
        'Ranger',
        'Assassin',
        'Bard',
        'Necromancer',
        'Monk',
        'Paladin',
        'Thief',
        'Warlock',
        'Scribe',
        'Jeweler',
      ],
      'Urban': [
        'Blacksmith',
        'Baker',
        'Carpenter',
        'Alchemist',
        'Shopkeeper',
        'Farmer',
        'Wizard',
        'Sorcerer',
        'Enchanter',
        'Druid',
        'Knight',
        'Ranger',
        'Assassin',
        'Bard',
        'Necromancer',
        'Monk',
        'Paladin',
        'Thief',
        'Warlock',
        'Scribe',
        'Jeweler',
      ],
      'Neutral':
          occupations, // Use the original occupations list as the default fallback
    };

    List<String>? validOccupations = validOccupationsByClimate[climate];

    if (validOccupations == null || validOccupations.isEmpty) {
      return "Default Occupation";
    }

    int index = _random.nextInt(validOccupations.length);
    return validOccupations[index];
  }
}
